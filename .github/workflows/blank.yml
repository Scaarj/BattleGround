name: CI
on:
  push:
  pull_request:
  workflow_dispatch:
jobs:
  format:
    name: Format checker
    runs-on: ubuntu-latest
    container: yaishenka/docker-codestyle-checker
    steps:
      - uses: actions/checkout@v2
      - name: Clang format apply
        run: |
          git diff -U0 --no-color main | clang-format-diff -p1 -style file | tee format.diff
          dir
      - name: Search diff
        if: hashFiles('format.diff') != ''
        run: |
          zip --junk-paths my-artifact format.diff
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./my-artifact.zip
          asset_name: my-artifact.zip
          asset_content_type: application/zip
    
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: |
          mkdir build
          cd build
          cmake ..
          cmake --build .  
      - name: Run tests
        run: |
            build/test/test --gtest_output="xml:report.xml"
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: report.xml
